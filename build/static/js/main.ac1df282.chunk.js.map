{"version":3,"sources":["Car/Car.js","App.js","reportWebVitals.js","index.js"],"names":["props","inputClasses","name","push","length","className","style","boxShadow","border","year","join","type","onChange","onChangeName","value","onClick","onDelete","App","state","cars","pageTitle","showCars","toggleCarsHandler","setState","index","car","this","concat","splice","carsList","map","deleteHandler","bind","event","target","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4QAGe,WAAAA,GACf,IAAMC,EAAa,CAAC,SAEF,KAAfD,EAAME,KACPD,EAAaE,KAAK,SAElBF,EAAaE,KAAK,OAGjBH,EAAME,KAAKE,OAAS,GACrBH,EAAaE,KAAK,QAQlB,OACE,sBAAKE,UAAU,MAAMC,MANX,CACZC,UAAW,kCACXC,OAAQ,kBAIN,UACE,iDAAeR,EAAME,QACrB,uCAAS,iCAASF,EAAMS,UACxB,uBAAOJ,UAAWJ,EAAaS,KAAK,KAAMC,KAAK,OAAOC,SAAUZ,EAAMa,aAAcC,MAAOd,EAAME,OACjG,wBAAQa,QAASf,EAAMgB,SAAvB,wBCrBeC,E,4MACnBC,MAAQ,CACNC,KAAM,CACJ,CAACjB,KAAM,OAAQO,KAAM,KACrB,CAACP,KAAM,QAASO,KAAM,MACtB,CAACP,KAAM,OAAQO,KAAM,OAEvBW,UAAW,mBACXC,UAAU,G,EAsBdC,kBAAmB,WACjB,EAAKC,SAAS,CACZF,UAAW,EAAKH,MAAMG,Y,kDArBxB,SAAcnB,EAAMsB,GAClB,IAAMC,EAAMC,KAAKR,MAAMC,KAAKK,GAC5BC,EAAIvB,KAAOA,EACX,IAAMiB,EAAI,YAAOO,KAAKR,MAAMC,MAC5BA,EAAKK,GAASC,EACdC,KAAKH,SAAS,CACZJ,KAAMA,M,2BAKV,SAAcK,GACZ,IAAML,EAAOO,KAAKR,MAAMC,KAAKQ,SAC7BR,EAAKS,OAAOJ,EAAO,GAEnBE,KAAKH,SAAS,CAACJ,W,oBASjB,WAAU,IAAD,OACHU,EAAW,KAef,OAbIH,KAAKR,MAAMG,WACbQ,EAAWH,KAAKR,MAAMC,KAAKW,KAAI,SAACL,EAAKD,GACnC,OACE,cAAC,EAAD,CAEEtB,KAAMuB,EAAIvB,KACVO,KAAMgB,EAAIhB,KACVO,SAAU,EAAKe,cAAcC,KAAK,EAAMR,GACxCX,aAAc,SAACoB,GAAD,OAAW,EAAKpB,aAAaoB,EAAMC,OAAOpB,MAAOU,KAJ1DA,OAUX,sBAAKnB,UAAU,MAAf,UACE,6BAAKqB,KAAKR,MAAME,YAEhB,wBAAQL,QAASW,KAAKJ,kBAAtB,yBAEEO,S,GAzDuBM,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ac1df282.chunk.js","sourcesContent":["import React from 'react'\nimport './Car.css'\n\nexport default props => {\nconst inputClasses=['input']\n\nif(props.name !== '') {\n  inputClasses.push('green')\n} else {\n  inputClasses.push('red')\n}\n\nif(props.name.length > 4) {\n  inputClasses.push('bold')\n} \n\nconst style = {\n  boxShadow: '0px 5px 15px rgba(0, 1, 1, 0.2)',\n  border: '1px solid #ccc'\n}\n\n  return(\n    <div className=\"Car\" style={style}>\n      <h3>Ð¡ar name: {props.name}</h3>\n      <p>Year: <strong>{props.year}</strong></p>\n      <input className={inputClasses.join(' ')} type=\"text\" onChange={props.onChangeName} value={props.name} />\n      <button onClick={props.onDelete}>Delete</button>\n    </div>\n  )\n}\n\n","import './App.css';\nimport React, {Component} from 'react';\nimport Car from './Car/Car'\n\n\nexport default class App extends Component {\n  state = {\n    cars: [\n      {name: 'Ford', year: 2000},\n      {name: 'Mazda', year: 2001},\n      {name: 'Audi', year: 2002},\n    ],\n    pageTitle: 'React components',\n    showCars: false\n  }\n\n  onChangeName (name, index) {\n    const car = this.state.cars[index]\n    car.name = name\n    const cars = [...this.state.cars]\n    cars[index] = car\n    this.setState({\n      cars: cars\n    })\n  }\n\n\n  deleteHandler(index) {\n    const cars = this.state.cars.concat()\n    cars.splice(index, 1)\n\n    this.setState({cars})\n\n  }\n\ntoggleCarsHandler =() => {\n  this.setState({\n    showCars: !this.state.showCars\n  })\n}\n  render() {\n    let carsList = null\n\n    if (this.state.showCars) {\n      carsList = this.state.cars.map((car, index) => {\n        return (\n          <Car\n            key={index}\n            name={car.name}\n            year={car.year}\n            onDelete={this.deleteHandler.bind(this, index)}\n            onChangeName={(event) => this.onChangeName(event.target.value, index)}\n          />\n        )\n      })\n    }\n    return (\n      <div className=\"App\">\n        <h1>{this.state.pageTitle}</h1>\n\n        <button onClick={this.toggleCarsHandler}>Toggle cars</button>\n\n        { carsList}\n      </div>\n    );\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Car from './Car/Car'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}